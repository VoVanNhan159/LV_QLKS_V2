@page "/discountdetail/create/{id:int}"
@layout Layout_Owner
@using Microsoft.AspNetCore.SignalR.Client
@using Radzen
@using ShareModel
@using ShareModel.Custom
@using Tewr.Blazor.FileReader
@inject IFileReaderService fileReader
@inject HttpClient client

<div>
    <div class="section__content section__content--p30">
        <div class="container">
            <div class="row">
                <div class="col">
                    <RadzenTemplateForm TItem="DiscountDetail_Custom" Data=@discountDetail_Custom>
                        <RadzenFieldset Text="Thêm mới chi tiết khuyến mãi">
                            <div class="row mb-5">
                                <div class="col-md-4">
                                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Chọn Khách sạn</RadzenText>
                                </div>
                                <div class="col">
                                    <RadzenDropDown TValue="int" Class="w-100" 
                                        AllowFiltering="true" Data=@hotels TextProperty="HotelName" ValueProperty="HotelId"
                                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" @bind-Value="hotel.HotelId" 
                                        Change="HotelChange"/>
                                </div>
                            </div>
                            <div class="row mb-5">
                                <div class="col-md-4">
                                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Chọn Phòng</RadzenText>
                                </div>
                                <div class="col">
                                    <RadzenDropDown TValue="int" Class="w-100" 
                                        AllowFiltering="true" Data=@rooms TextProperty="RoomName" ValueProperty="RoomId"
                                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" @bind-Value="discountDetail_Custom.RoomId" 
                                        />
                                </div>
                            </div>
                            <div class="row mb-5">
                                <div class="col-md-4">
                                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Tỉ lệ khuyến mãi</RadzenText>
                                </div>
                                <div class="col">
                                    <RadzenNumeric style="display: block" Placeholder="Nhập Tỉ lệ khuyến mãi" Name="Percent" @bind-Value="discountDetail_Custom.Percent" Class="w-100" AutoComplete="false" />
                                    <RadzenRequiredValidator Component="Percent" Text="Vui lòng nhập Tỉ lệ khuyến mãi hợp lệ" Popup="true" Style="position: absolute"/>
                                    <RadzenNumericRangeValidator Component="Percent" Min="1" Max="100" Text="Tỉ lệ khuyến mãi trong khoản 1 - 100" Popup="true" Style="position: absolute"/>
                                </div>
                            </div>
                            <RadzenButton ButtonType="ButtonType.Submit" Text="Thêm chi tiết khuyến mãi" Click="AddDiscountDetail"></RadzenButton>
                        </RadzenFieldset>
                    </RadzenTemplateForm>
                </div>
            </div>
        </div>
    </div>
</div>



@code {
    [Parameter]
    public int id{ get; set; }

    DiscountDetail_Custom discountDetail_Custom = new DiscountDetail_Custom();
    List<Discountdetail> discountDetails = new List<Discountdetail>();
    List<Room> rooms = new List<Room>();
    List<Hotel> hotels = new List<Hotel>();
    Hotel hotel = new Hotel();
    User owner = new User();

    HotelService hotelService = new HotelService();
    UserService userService = new UserService();
    RoomService roomService = new RoomService();
    DiscountdetailService discountdetailService = new DiscountdetailService();

    //Hub
    private HubConnection hubConnection;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/HotelBrHub"))
            .Build();
        await hubConnection.StartAsync();
    }
    public bool IsConnected => hubConnection.State == HubConnectionState.Connected;
    Task SendMessage() => hubConnection.SendAsync("SendMessage");
    //end hub

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var phone = await sessionStorage.GetItemAsync<string>("owner_phone");
            owner = await userService.GetUser(phone);
            hotels = await hotelService.GetAllHotelOfOwner(owner.UserPhone);
            discountDetails = await discountdetailService.GetAllDiscountdetailOfDiscount(id);
            discountDetail_Custom.DiscountId = id;
            StateHasChanged();
        }
    }
    protected async void HotelChange()
    {
        rooms = await roomService.GetAllRoomOfHotel(hotel.HotelId);
        List<int> roomsSame = rooms.Select(r=>r.RoomId).Intersect(discountDetails.Select(r=>r.RoomId)).ToList();
        foreach (int id in roomsSame)
        {
            var room = rooms.Where(r => r.RoomId == id).First();
            rooms.Remove(room);
        }
        StateHasChanged();
    }
    protected async void AddDiscountDetail()
    {
        //Kiểm tra tồn tại discountdetail
        bool check = false;
        var discountDetailTemp = new Discountdetail();
        discountDetailTemp.DiscountId = discountDetail_Custom.DiscountId;
        discountDetailTemp.RoomId = discountDetail_Custom.RoomId;
        foreach (var item in discountDetails)
        {
            if (item.DiscountId == discountDetailTemp.DiscountId && item.RoomId == discountDetailTemp.RoomId)
            {
                NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Lỗi", Detail = "Thêm thất bại, phòng đã có trong danh sách khuyến mãi", Duration = 4000 });
                check = true;
                break;
            }
        }
        if(check == false)
        {
            if (discountDetail_Custom.RoomId < 0 || discountDetail_Custom.Percent > 100 || discountDetail_Custom.Percent <= 0 || discountDetail_Custom.Percent == null) ;
            else{
                var res = await discountdetailService.AddDiscountDetail(discountDetail_Custom);
                if(res != null)
                {
                    NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Thành công", Detail = "Thêm chi tiết thành công", Duration = 4000 });
                    if (IsConnected)
                        await SendMessage();
                    this.DialogService.Close(res);
                }
                else
                {
                    NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Lỗi", Detail = "Thêm thất bại", Duration = 4000 });
                }
            }
        }
    }
}
