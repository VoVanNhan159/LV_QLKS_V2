@using ShareModel.Custom
@layout Layout_Owner


<div>
    <div class="section__content section__content--p30">
        <div class="container">
            <div class="row">
                <div class="col">
                    <RadzenTemplateForm TItem="Typeofroom_Custom" Data=@typeofroom>
                        <RadzenFieldset Text="Cập nhật Loại phòng">
                            <div class="row mb-5">
                                <div class="col-md-4">
                                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Tên loại phòng</RadzenText>
                                </div>
                                <div class="col">
                                    <RadzenTextBox style="display: block" Placeholder="Nhập tên loại phòng" Name="TorName" @bind-Value=@typeofroom.TorName  Class="w-100" AutoComplete="false" />
                                    <RadzenRequiredValidator Component="TorName" Text="Vui lòng nhập tên loại phòng" Popup="true" Style="position: absolute"/>
                                </div>
                            </div>
                            <div class="row mb-5">
                                <div class="col-md-4">
                                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Giá</RadzenText>
                                </div>
                                <div class="col">
                                    <RadzenNumeric style="display: block" Placeholder="Nhập giá tiền" Name="TorPrice" @bind-Value=@typeofroom.TorPrice  Class="w-100" AutoComplete="false" />
                                    <RadzenRequiredValidator Component="TorPrice" Text="Vui lòng nhập giá tiền" Popup="true" Style="position: absolute"/>
                                </div>
                            </div>
                            <div class="row mb-5">
                                <div class="col-md-4">
                                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Sức chứa</RadzenText>
                                </div>
                                <div class="col">
                                    <RadzenNumeric style="display: block" Placeholder="Nhập sức chứa của phòng" Name="TorCapacity" @bind-Value=@typeofroom.TorCapacity  Class="w-100" AutoComplete="false" />
                                    <RadzenRequiredValidator Component="TorCapacity" Text="Vui lòng nhập sức chứa của phòng" Popup="true" Style="position: absolute"/>
                                </div>
                            </div>
                            <RadzenButton ButtonType="ButtonType.Submit" Text="Cập nhật" Click="UpdateTOR"></RadzenButton>
                        </RadzenFieldset>
                    </RadzenTemplateForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int id{ get; set; }
    Typeofroom_Custom typeofroom = new Typeofroom_Custom();
    User owner = new User();

    TypeOfRoomService typeOfRoomService = new TypeOfRoomService();
    UserService userService = new UserService();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var phone = await sessionStorage.GetItemAsync<string>("owner_phone");
            owner = await userService.GetUser(phone);
            var typeofroomTemp = await typeOfRoomService.GetTypeOfRoom(id);
            typeofroom.TorId = typeofroomTemp.TorId;
            typeofroom.TorName = typeofroomTemp.TorName;
            typeofroom.TorCapacity = typeofroomTemp.TorCapacity;
            typeofroom.TorPrice = typeofroomTemp.TorPrice;
            typeofroom.UserPhone = typeofroomTemp.UserPhone;
            StateHasChanged();
        }
    }
    protected async void UpdateTOR()
    {
        if(typeofroom.TorName != null && typeofroom.TorPrice != null && typeofroom.TorCapacity != null)
        {
            var res = await typeOfRoomService.UpdateTypeofroom(typeofroom);
            if(res != null)
            {
                this.DialogService.Close(res);
            }
        }
    }
}
