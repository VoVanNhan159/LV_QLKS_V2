@page "/typeofroom/index"
@layout Layout_Owner

<div class="main-content">
    <div class="section__content section__content--p30">
        <RadzenDataGrid EmptyText="Không có dữ liệu, vui lòng kiểm tra lại" Data="@typeofrooms" TItem="Typeofroom" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Center" AllowSorting="true" 
            PageSizeOptions="@pageSizeOptions" PageSize="5" PageSizeText="mẫu tin/trang" ShowPagingSummary="@showPagerSummary" PagingSummaryFormat="@pagingSummaryFormat" Page="@OnPage">
            <Columns>
                <RadzenDataGridColumn TItem="Typeofroom" Property="TorName" Title="Tên loại phòng" />
                <RadzenDataGridColumn TItem="Typeofroom" Title="Giá">
                    <Template Context="data">
                        @hotelService.FormatVND((int)data.TorPrice)/<small>đêm</small>
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Typeofroom" Title="Sức chứa" Property="TorCapacity">
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Typeofroom" Title="Chỉnh sửa">
                    <Template Context="data">
                        <RadzenButton ButtonStyle="ButtonStyle.Info" Icon="build" Class="m-1" Click=@(()=>ShowEditPopup(data.TorId)) />
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
        @*<table class="table table-striped">
            <thead>
                <tr>
                    <th>
                        STT
                    </th>
                    <th>
                        Tên phòng
                    </th>
                    <th>
                        Giá
                    </th>
                    <th>
                        Sức chứa
                    </th>
                    <th>

                    </th>
                </tr>
            </thead>
            <tbody> 
                @if (typeofrooms.Count > 0)
                {
                    int stt = 1;
                    foreach (var item in typeofrooms)
                    {
                        <tr>
                            <td>
                                @stt
                                @{
                                    stt++;
                                }
                            </td>
                            <td>
                                @item.TorName
                            </td>
                            <td>
                                @hotelService.FormatVND((int)item.TorPrice) đồng/<small>đêm</small>
                            </td>
                            <td>
                                @item.TorCapacity
                            </td>
                            <td>
                                <button style="color:blue" @onclick="()=>ShowEditPopup(item.TorId)"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></button>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>*@
    </div>
</div>

@code {
    //Phân trang
    string pagingSummaryFormat = "Trang hiển thị {0}/{1} (tổng cộng {2} mẫu tin)";

    IEnumerable<int> pageSizeOptions = new int[] { 5, 10, 15, 20 };
    bool showPagerSummary = true;

    void OnPage(PagerEventArgs args)
    {
        StateHasChanged();
    }

    User owner = new User();
    List<Typeofroom> typeofrooms = new List<Typeofroom>();

    UserService userService = new UserService();
    TypeOfRoomService typeOfRoomService = new TypeOfRoomService();
    HotelService hotelService = new HotelService();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var phone = await sessionStorage.GetItemAsync<string>("owner_phone");
            owner = await userService.GetUser(phone);
            typeofrooms = await typeOfRoomService.GetAllTypeofroomOfOwner(owner.UserPhone);
            StateHasChanged();
        }
    }
    protected async void ShowEditPopup(int id)
    {
        var res = await DialogService.OpenAsync<OwnerArea.TypeOfRoom.Edit>("",
             new Dictionary<string, object>() { { "id", id } },
             new DialogOptions() { Width = "700px", Height = "400px", Resizable = true, Draggable = true });
        if(res != null)
        {
            NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Thành công", Detail = "Thêm thành công", Duration = 4000 });
            NavigationManager.NavigateTo("/typeofroom/create");
            NavigationManager.NavigateTo("/typeofroom/index");
        }
    }
}
