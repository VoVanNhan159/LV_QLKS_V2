@page "/admin/user/index"
@using System.Globalization
@using Microsoft.AspNetCore.SignalR.Client
@layout Layout_Admin
<PageTitle>Danh sách người dùng</PageTitle>
<div class="main-content">
    <RadzenText Style="color:darkviolet" TextStyle="TextStyle.DisplayH4" TextAlign="TextAlign.Center"  Text="Danh sách người dùng"></RadzenText>
    <div class="section__content section__content--p30">
        <RadzenDataGrid EmptyText="Không có dữ liệu, vui lòng kiểm tra lại" Data="@users" FilterMode="FilterMode.Simple" AllowFiltering="true" TItem="User" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Center" AllowSorting="true" 
            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" PageSizeOptions="@pageSizeOptions" PageSize="5" PageSizeText="mẫu tin/trang" ShowPagingSummary="@showPagerSummary" PagingSummaryFormat="@pagingSummaryFormat" Page="@OnPage">
            <Columns>
                <RadzenDataGridColumn TItem="User" Property="UserName" Title="Họ tên">
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="User" Property="UserPhone" Title="Số điện thoại">
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="User" Title="Ngày sinh">
                    <Template Context="data">
                        @hotelService.FormatDateVN(data.UserDateofbirth.ToString())
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="User" Property="UserAddress" Title="Địa chỉ">
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    </div>
</div>

@code {
    List<User> users = new List<User>();

    UserService userService = new UserService();
    HotelService hotelService = new HotelService();


    //Phân trang
    string pagingSummaryFormat = "Trang hiển thị {0}/{1} (tổng cộng {2} mẫu tin)";

    IEnumerable<int> pageSizeOptions = new int[] { 5, 10, 15, 20 };
    bool showPagerSummary = true;

    void OnPage(PagerEventArgs args)
    {
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        users = await userService.GetAllUserExceptAdmin();
        StateHasChanged();
    }
}
