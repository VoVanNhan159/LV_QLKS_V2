@page "/admin/customerreview"
@using System.Globalization
@using System.Text.RegularExpressions
@layout Layout_Admin

<div class="main-content">
    <RadzenText Style="color:darkviolet" TextStyle="TextStyle.DisplayH4" TextAlign="TextAlign.Center"  Text="Danh sách đánh giá, bình luận"></RadzenText>
    <div class="section__content section__content--p30">
        <RadzenDataGrid EmptyText="Không có dữ liệu, vui lòng kiểm tra lại" Data="@customerreviews" FilterMode="FilterMode.Simple" AllowFiltering="true" TItem="Customerreview" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Center" AllowSorting="true" 
            PageSizeOptions="@pageSizeOptions" PageSize="5" PageSizeText="mẫu tin/trang" ShowPagingSummary="@showPagerSummary" PagingSummaryFormat="@pagingSummaryFormat" Page="@OnPage">
            <Columns>
                <RadzenDataGridColumn TItem="Customerreview" Title="Tên phòng">
                    <Template Context="data">
                          @data.Room.RoomName - @data.Room.Hotel.HotelName
                     </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Customerreview" Width="15%" Property="UserPhoneNavigation.UserName" Title="Người đánh giá" />
                <RadzenDataGridColumn TItem="Customerreview" Width="15%" Title="Ngày đánh giá">
                     <Template Context="data">
                          @DateTime.Parse(data.CrDate.ToString()).ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("vi-VN"))
                     </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Customerreview" Property="CrComment"  Title="Nội dung đánh giá" />
                <RadzenDataGridColumn TItem="Customerreview" Width="10%">
                    <Template Context="data">
                       <RadzenButton ButtonStyle="ButtonStyle.Info" Icon="build" Class="m-1" Click=@(() => DeleteCustomerReview(data)) />
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
        @*<table class="table table-striped">
            <thead>
                <tr>
                    <th>
                        Tên khách sạn
                    </th>
                    <th>
                        Tên phòng
                    </th>
                    <th>
                        Người đánh giá
                    </th>
                    <th>
                        Ngày đánh giá
                    </th>
                    <th>
                        Nội dung đánh giá
                    </th>
                    <th>

                    </th>
                </tr>
            </thead>
            <tbody>
                @if(customerreviews.Count > 0)
                    foreach (var item in customerreviews)
                    {
                        if (HasBadWords(item.CrComment))
                        {
                            <tr style="background-color: cornsilk;">
                                <td>
                                    @item.Room.Hotel.HotelName
                                </td>
                                <td>
                                    @item.Room.RoomName
                                </td>
                                <td>
                                    @item.UserPhoneNavigation.UserName
                                </td>
                                <td>
                                    @DateTime.Parse(item.CrDate.ToString()).ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("vi-VN"))
                                </td>
                                <td>
                                    @item.CrComment
                                </td>
                                <td>
                                    <RadzenButton ButtonStyle="ButtonStyle.Info" Icon="build" Class="m-1" Click=@(() => DeleteCustomerReview(item)) />
                                </td>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td>
                                    @item.Room.Hotel.HotelName
                                </td>
                                <td>
                                    @item.Room.RoomName
                                </td>
                                <td>
                                    @item.UserPhoneNavigation.UserName
                                </td>
                                <td>
                                    @DateTime.Parse(item.CrDate.ToString()).ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("vi-VN"))
                                </td>
                                <td>
                                    @item.CrComment
                                </td>
                                <td>
                                    <RadzenButton ButtonStyle="ButtonStyle.Info" Icon="delete" Class="m-1" Click=@(() => DeleteCustomerReview(item)) />
                                </td>
                            </tr>
                        }
                    }
            </tbody>
        </table>*@
    </div>
</div>

@code {
    List<Customerreview> customerreviews = new List<Customerreview>();

    CustomerReviewService customerReviewService = new CustomerReviewService();

    //Phân trang
    string pagingSummaryFormat = "Trang hiển thị {0}/{1} (tổng cộng {2} mẫu tin)";

    IEnumerable<int> pageSizeOptions = new int[] { 5, 10, 15, 20 };
    bool showPagerSummary = true;

    void OnPage(PagerEventArgs args)
    {
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        customerreviews = await customerReviewService.GetAllCustomerReview();
    }

    public string FilterWords(string inputWords) {
        Regex wordFilter = new Regex("(puppies|kittens|dolphins|crabs)");
        return wordFilter.Replace(inputWords, "<3");
    }
    public bool HasBadWords(string inputWords) {
        Regex wordFilter = new Regex("(cc|kittens|dolphins|crabs)");
        return wordFilter.IsMatch(inputWords);
    }
    protected async void DeleteCustomerReview(Customerreview customerreview)
    {
        var confirmationResult = await this.DialogService.Confirm("Bạn có muốn xóa bình luận này không?", "Thông báo", new ConfirmOptions { OkButtonText = "Xác nhận", CancelButtonText = "Trở về" });
        if (confirmationResult == true)
        {
            var res = await customerReviewService.DeleteCustomerReview(customerreview.RoomId, customerreview.UserPhone, customerreview.Id);
            if(res != null)
            {
                NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Thành công", Detail = "Xóa bình luận thành công", Duration = 4000 });
                customerreviews = await customerReviewService.GetAllCustomerReview();
                StateHasChanged();
            }
        }
    }
}
