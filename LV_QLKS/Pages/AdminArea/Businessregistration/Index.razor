@page "/admin/businessregistration/index"
@layout Layout_Admin

<div class="main-content">

    <div class="section__content section__content--p30">
        <RadzenDataGrid EmptyText="Không có dữ liệu, vui lòng kiểm tra lại" Data="@businessregistrations" FilterMode="FilterMode.Simple" AllowFiltering="true" TItem="Businessregistration" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Center" AllowSorting="true" 
            PageSizeOptions="@pageSizeOptions" PageSize="5" PageSizeText="mẫu tin/trang" ShowPagingSummary="@showPagerSummary" PagingSummaryFormat="@pagingSummaryFormat" Page="@OnPage">
            <Columns>
                <RadzenDataGridColumn TItem="Businessregistration" Title="Tên khách sạn đăng ký">
                    <Template Context="data">
                        @GetNameHotelOfBR(data.HotelId)
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Businessregistration" Title="Tên chủ khách sạn">
                    <Template Context="data">
                        @GetNameOfUser(data.UserPhone)
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Businessregistration" Title="Gói đăng ký">
                    <Template Context="data">
                        @GetPricelistbrOfBR(data.PricelistbrId).PricelistbrName (@hotelService.FormatVND((int)GetPricelistbrOfBR(data.PricelistbrId).PricelistbrPrice))
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Businessregistration" Title="Ngày đăng ký">
                    <Template Context="data">
                        @DateTime.Parse(data.BrDate.ToString()).ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("vi-VN"))
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Businessregistration" Title="Trạng thái">
                    <Template Context="data">
                        @if (CheckStatusOfBR(data))
                        {
                            <p style="color:limegreen">Đang sử dụng</p>
                        }
                        else
                        {
                            <p style="color:gray">Đã quá hạn</p>
                        }
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    </div>
</div>

@code {
    List<Businessregistration> businessregistrations = new List<Businessregistration>();
    List<Hotel> hotels = new List<Hotel>();
    List<Pricelistbr> pricelistbrs = new List<Pricelistbr>();
    List<User> users = new List<User>();

    UserService userService = new UserService();
    HotelService hotelService = new HotelService();
    BusinessregistrationService businessregistrationService = new BusinessregistrationService();
    PricelistbrService pricelistbrService = new PricelistbrService();

    //Phân trang
    string pagingSummaryFormat = "Trang hiển thị {0}/{1} (tổng cộng {2} mẫu tin)";

    IEnumerable<int> pageSizeOptions = new int[] { 5, 10, 15, 20 };
    bool showPagerSummary = true;

    void OnPage(PagerEventArgs args)
    {
        StateHasChanged();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            hotels = await hotelService.GetAllHotel();
            users = await userService.GetAllUser();
            businessregistrations = await businessregistrationService.GetAllBusinessregistration();
            businessregistrations = businessregistrations.OrderBy(br=>br.BrDate).ToList();
            pricelistbrs = await pricelistbrService.GetAllPricelistbr();
            StateHasChanged();
        }
    }
    protected string GetNameHotelOfBR(int id)
    {
        string res = "";
        foreach(var item in hotels)
        {
            if (id == item.HotelId)
            {
                res = item.HotelName;
                break;
            }
        }
        return res;
    }
    protected string GetNameOfUser(string id)
    {
        string res = "";
        foreach(var item in users)
        {
            if (id == item.UserPhone)
            {
                res = item.UserName;
                break;
            }
        }
        return res;
    }
    protected Pricelistbr GetPricelistbrOfBR(int id)
    {
        Pricelistbr res = new Pricelistbr();
        foreach(var item in pricelistbrs)
        {
            if (id == item.PricelistbrId)
            {
                res = item;
                break;
            }
        }
        return res;
    }
    protected bool CheckStatusOfBR(Businessregistration br)
    {
        var pricelistBr = GetPricelistbrOfBR(br.PricelistbrId);
        if(DateTime.Parse(br.BrDate.ToString()).AddMonths((int)pricelistBr.PricelistbrMonth) >= DateTime.Now)
        {
            return true;
        }
        return false;
    }
}
