@using BlazorCaptcha
@using ShareModel.Custom
@using System.Net.Mail

                <RadzenFieldset Text="Vui lòng nhập số điện thoại khôi phục" Visible="@checkPhone">
                    <div class="row">
                        <div class="col-md-2">
                        </div>
                        <div class="col-md-8">
                           <RadzenText Text="Vui lòng nhập số điện thoại"></RadzenText>
                        </div>
                        <div class="col-md-2">
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-md-2">
                            
                        </div>
                        <div class="col-md-8">
                            <RadzenTextBox style="display: block;width: 100%;" Name="Phone" @bind-Value="@phone" />
                            <RadzenRequiredValidator Component="Phone" Text="Vui lòng nhập Số điện thoại" Popup="true" Style="position: absolute" />
                        </div>
                        <div class="col-md-2">
                        </div>
                    </div>
                    <br />
                    <RadzenFieldset Text="Vui lòng nhập mã captcha bên dưới" Visible="@checkPhone">
                        <div class="row">
                            <div class="col-md-2">
                            </div>
                            <div class="col-md-8">
                                <Captcha @bind-CaptchaWord="@Captcha" CharNumber="@CaptchaLetters" />
                            </div>
                            <div class="col-md-2">
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-2">
                            </div>
                            <div class="col-md-8">
                                <RadzenTextBox @bind-Value="@captcha" style="width: 100%;"/>
                            </div>
                            <div class="col-md-2">
                            </div>
                        </div>
                        <br />
                         <div class="row">
                            <div class="col-md-2">
                            </div>
                            <div class="col-md-8" style="text-align-last: center;">
                                <RadzenButton Text="Xác nhận" ButtonStyle="ButtonStyle.Success" Click="CheckPhone"></RadzenButton>
                            </div>
                            <div class="col-md-2">
                            </div>
                        </div>
                    </RadzenFieldset>
                   
                </RadzenFieldset>
                <RadzenFieldset Text="Vui lòng nhập mã đã được gửi về Email" Visible="@checkSecretCode">
                    <div class="row">
                        <div class="col-md-2">
                        </div>
                        <div class="col-md-8">
                            <RadzenTextBox Name="SecretCode" @bind-Value="secretCode" style="display: block;width: 100%;"/>
                            <RadzenRequiredValidator Component="SecretCode" Text="Vui lòng nhập mã" Popup="true" Style="position: absolute" />
                        </div>
                        <div class="col-md-2">
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-md-2">
                        </div>
                        <div class="col-md-8" style="text-align-last: center;">
                            <RadzenButton Text="Xác nhận" ButtonStyle="ButtonStyle.Success" Click="CheckSecretCode"></RadzenButton>
                        </div>
                        <div class="col-md-2">
                        </div>
                    </div>
                </RadzenFieldset>
                <RadzenFieldset Text="Vui lòng nhập mã đã được gửi về Email" Visible="@checkPassword">
                    <div class="row">
                        <div class="col-md-5">
                            <RadzenText Text="Nhập mật khẩu mới"></RadzenText>
                        </div>
                        <div class="col-md-7">
                            <RadzenPassword Name="Password1" @bind-Value=@password1 style="display: block;width: 100%;"/>
                            <RadzenRequiredValidator Component="Password1" Text="Vui lòng nhập mật khẩu mới" Popup="true" Style="position: absolute" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-5">
                            <RadzenText Text="Nhập lại mật khẩu mới"></RadzenText>
                        </div>
                        <div class="col-md-7">
                            <RadzenPassword Name="Password2" @bind-Value=@password2 style="display: block;width: 100%;"/>
                            <RadzenRequiredValidator Component="Password2" Text="Vui lòng nhập lại mật khẩu" Popup="true" Style="position: absolute" />
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-md-2">
                        </div>
                        <div class="col-md-8" style="text-align-last: center;">
                            <RadzenButton Text="Xác nhận" ButtonStyle="ButtonStyle.Success" Click="CheckPassword"></RadzenButton>
                        </div>
                        <div class="col-md-2">
                        </div>
                    </div>
                </RadzenFieldset>


<p>@Captcha</p>
@code {
    private bool checkPhone;
    private bool checkSecretCode;
    private bool checkPassword;
    private string Captcha = "";
    private int CaptchaLetters = 5;

    private string phone = "";
    private string captcha = "";
    private string secretCode = "";
    private string secretCodeSend = "";
    private string password1 = "";
    private string password2 = "";

    User customer = new User();
    Account_Custom account_Custom = new Account_Custom();

    UserService userService = new UserService();
    AccountService accountService = new AccountService();

    protected override Task OnInitializedAsync()
    {
        checkPhone = true;
        checkSecretCode = false;
        checkPassword = false;
        Captcha = BlazorCaptcha.Tools.GetCaptchaWord(CaptchaLetters);
        return base.OnInitializedAsync();
    }
    protected async void CheckPhone()
    {
        if(phone != "")
        {
            var acc = await accountService.CheckAccount(phone);
            if(acc != null)
            {
                account_Custom.AccountUsername = acc.AccountUsername;
                account_Custom.AccountPassword = acc.AccountPassword;
                account_Custom.ToaId = acc.ToaId;
                customer = await userService.GetUser(account_Custom.AccountUsername);
                if(captcha != "")
                {
                    if(Captcha == captcha)
                    {
                        checkPhone = false;
                        checkSecretCode = true;
                        Random rnd = new Random();
                        secretCodeSend  = rnd.Next(100000, 999999).ToString();
                        using (MailMessage mail = new MailMessage())
                        {
                            mail.From = new MailAddress("vovannhan2727bc@outlook.com");
                            mail.To.Add(customer.UserEmail);
                            mail.Subject = "Đổi mật khẩu tài khoản";
                            mail.Body = "Kính chào khách hàng: " + customer.UserName.ToUpper();
                            mail.Body += "<p>Chúng tôi xin gửi bạn mã khôi phục tài khoản: " + secretCodeSend + "<p/>";
                            mail.Body += "<p>Xin chân thành cảm ơn quý khách hàng đã tin tưởng và sử dụng dịch vụ của chúng tôi</p>";

                            mail.Body += "<br>Trân trọng,<br>";
                            mail.IsBodyHtml = true;

                            using (SmtpClient smtp = new SmtpClient("smtp.office365.com", 587))
                            {
                                smtp.Credentials = new System.Net.NetworkCredential("vovannhan2727bc@outlook.com", "8vxzX$PS123");
                                smtp.EnableSsl = true;
                                smtp.Send(mail);
                            }
                        }
                    }
                    else
                    {
                        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Warning, Summary = "Thông báo", Detail = "Vui lòng nhập mã Captcha", Duration = 4000 });
                    }
                }
                else
                {
                    NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Warning, Summary = "Thông báo", Detail = "Vui lòng nhập mã captcha", Duration = 4000 });
                }
                StateHasChanged();
            }
            else
            {
                NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Warning, Summary = "Thông báo", Detail = "Không có tài khoản trùng khớp với số điện thoại vừa nhập", Duration = 4000 });
            }
        }
        else
        {
            NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Warning, Summary = "Thông báo", Detail = "Vui lòng nhập số điện thoại", Duration = 4000 });
        }
    }
    protected void CheckSecretCode()
    {
        if(secretCode == secretCodeSend)
        {
            checkSecretCode = false;
            checkPassword = true;
            StateHasChanged();
        }
        else
        {
            NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Warning, Summary = "Thông báo", Detail = "Mã xác nhận không đúng. Vui lòng kiểm tra lại", Duration = 4000 });
        }
    }
    protected async void CheckPassword()
    {
        
        if(password1.Length <= 4)
        {
            NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Warning, Summary = "Thông báo", Detail = "Mật khẩu ngắn hơn 5 ký tự", Duration = 4000 });
        }
        else if(password1 != password2)
        {
            NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Warning, Summary = "Thông báo", Detail = "Mật khẩu không khớp", Duration = 4000 });
        }
        else
        {
            account_Custom.AccountPassword = accountService.Encrypt(password1);
            var res = await accountService.UpdateAccount(account_Custom);
            if (res != null)
            {
                NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Thông báo", Detail = "Đổi mật khẩu thành công", Duration = 4000 });
                using (MailMessage mail = new MailMessage())
                {
                    mail.From = new MailAddress("vovannhan2727bc@outlook.com");
                    mail.To.Add(customer.UserEmail);
                    mail.Subject = "Đổi mật khẩu tài khoản thành công";
                    mail.Body = "Kính chào khách hàng: " + customer.UserName.ToUpper();
                    mail.Body += "<p>Tài khoản của bạn đã được đổi mật khẩu thành công<p/>";
                    mail.Body += "<p>Xin chân thành cảm ơn quý khách hàng đã tin tưởng và sử dụng dịch vụ của chúng tôi</p>";

                    mail.Body += "<br>Trân trọng,<br>";
                    mail.IsBodyHtml = true;

                    using (SmtpClient smtp = new SmtpClient("smtp.office365.com", 587))
                    {
                        smtp.Credentials = new System.Net.NetworkCredential("vovannhan2727bc@outlook.com", "8vxzX$PS123");
                        smtp.EnableSsl = true;
                        smtp.Send(mail);
                    }
                }
                this.DialogService.Close(res);
            }
        }
    }
}
