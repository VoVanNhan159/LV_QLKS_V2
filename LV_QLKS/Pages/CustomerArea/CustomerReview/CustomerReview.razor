@using Microsoft.AspNetCore.SignalR.Client
@using ShareModel.Custom
<PageTitle>Danh sách bình luận, đánh giá</PageTitle>
@if(customerReview_Custom.Id > 0)
{  
    <section class="section__content section__content--p30">
        <div class="row">
            <RadzenCard>
                <div class="col-lg-5">
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Đánh giá của bạn</RadzenText>
                    <RadzenRating @bind-Value=StarTemp />
                </div>
                <div class="col-lg-7">
                    <RadzenTextArea @bind-Value=customerReview_Custom.CrComment Class="w-100" Placeholder="Bình luận tại đây"></RadzenTextArea>
                </div>
                <RadzenButton Text="Cập nhật" ButtonStyle="ButtonStyle.Success" Click="UpdateReview"></RadzenButton>
            </RadzenCard>
            </div>
            <br />
            <div class="row">
                <div class="col review-detail-cn">
                <!-- Review All -->
                    <div class="review-all">
                        <h4 class="review-h">
                            Phòng này có tất cả (@customerreviews.Count) bình luận 
                        </h4>
                        <!-- Review Item -->
                        @foreach (var item in customerreviews)
                        {
                            <div class="row review-item">
                                <div class="col-xs-4 review-number" style="border-right: inset;">
                                    <ins>@item.CrStar/5</ins>
                                    <span>@item.UserPhoneNavigation.UserName</span>
                                    <small>@DateTime.Parse(item.CrDate.ToString()).ToString("dddd, dd, MMMM, yyyy", new System.Globalization.CultureInfo("vi-VN"))</small>
                                </div>
                                <div class="col-xs-8 review-text">
                                     <p>
                                        @{
                                            var CrComment = "";
                                            if(item.CrComment != null)
                                                CrComment = item.CrComment;
                                            else
                                                CrComment = "Người dùng không bình luận gì";
                                        }    
                                        @CrComment
                                     </p>
                                </div>
                            </div>
                        }
                        <!-- End Review Item -->
                    </div>
                 </div>
            </div>
    </section>
}
else
{  
    <section class="section__content section__content--p30">
        <div class="row">
            <RadzenCard>
                <div class="col-lg-5">
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Đánh giá của bạn</RadzenText>
                    <RadzenRating @bind-Value=StarTemp />
                </div>
                <div class="col-lg-7">
                    <RadzenTextArea @bind-Value=customerReview_Custom.CrComment Class="w-100" Placeholder="Bình luận tại đây"></RadzenTextArea>
                </div>
                <RadzenButton Text="Thêm đánh giá" ButtonStyle="ButtonStyle.Success" Click="AddReview"></RadzenButton>
            </RadzenCard>
            </div>
            <br />
            <div class="row">
                <div class="col review-detail-cn">
                <!-- Review All -->
                    <div class="review-all">
                        <h4 class="review-h">
                            Phòng này có tất cả (@customerreviews.Count) bình luận 
                        </h4>
                        <!-- Review Item -->
                        @foreach (var item in customerreviews)
                        {
                            <div class="row review-item">
                                <div class="col-xs-4 review-number">
                                    <ins>@item.CrStar/5</ins>
                                    <span>@item.UserPhoneNavigation.UserName</span>
                                    <small>@DateTime.Parse(item.CrDate.ToString()).ToString("dddd, dd, MMMM, yyyy", new System.Globalization.CultureInfo("vi-VN"))</small>
                                </div>
                                <div class="col-xs-8 review-text">
                                     <p>
                                        @{
                                            var CrComment = "";
                                            if(item.CrComment != null)
                                                CrComment = item.CrComment;
                                            else
                                                CrComment = "Người dùng không bình luận gì";
                                        }    
                                        @CrComment
                                     </p>
                                </div>
                            </div>
                        }
                        <!-- End Review Item -->
                    </div>
                 </div>
            </div>
    </section>
}

    <link href='https://fonts.googleapis.com/css?family=Lato:300,400%7COpen+Sans:300,400,600' rel='stylesheet' type='text/css'>
    <!-- End Font Google -->
    <!-- Library CSS -->
    <link rel="stylesheet" href="/home/css/library/font-awesome.min.css">
    <link rel="stylesheet" href="/home/css/library/bootstrap.min.css">
    <link rel="stylesheet" href="/home/css/library/jquery-ui.min.css">
    
    <!-- End Library CSS -->
    <link rel="stylesheet" href="/home/css/style.css">

@code {
    [Parameter]
    public int roomId{ get; set; }
    [Parameter]
    public int orderroomId{ get; set; }
    protected int StarTemp = 0;
    List<Customerreview> customerreviews = new List<Customerreview>();
    CustomerReview_Custom customerReview_Custom = new CustomerReview_Custom();
    List<Room> rooms = new List<Room>();
    List<Hotel> hotels = new List<Hotel>();

    CustomerReviewService customerReviewService = new CustomerReviewService();
    RoomService roomService = new RoomService();
    HotelService hotelService = new HotelService();
    //start hub
    private HubConnection hubConnection;
    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/HotelBrHub"))
            .Build();
        await hubConnection.StartAsync();
    }

    public bool IsConnected => hubConnection.State == HubConnectionState.Connected;
    Task SendMessage() => hubConnection.SendAsync("SendMessage");
    //end hub

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeAsync<IJSObjectReference>("import", "./Shared/Layout_Hotel.razor.js");
            var phone = await sessionStorage.GetItemAsync<string>("customer_phone");
            if (phone != null)
                customerReview_Custom.UserPhone = phone;
            if(roomId > 0)
            {
                customerreviews = await customerReviewService.GetAllCustomerreviewOfRoom(roomId);
                if(customerreviews.Count > 0)
                {
                    foreach (var item in customerreviews)
                    {
                        if(item.RoomId == roomId && item.UserPhone == phone && item.OrderroomId == orderroomId)
                        {
                            customerReview_Custom.Id = item.Id;
                            customerReview_Custom.RoomId = item.RoomId;
                            customerReview_Custom.OrderroomId = item.OrderroomId;
                            customerReview_Custom.UserPhone = item.UserPhone;
                            customerReview_Custom.CrStar = item.CrStar;
                            customerReview_Custom.CrComment = item.CrComment;
                            StarTemp = (int)item.CrStar;
                            break;
                        }
                    }
                }
            }
            StateHasChanged();
        }

    }
    protected void OnChange(int value)
    {
        customerReview_Custom.CrStar = (double)value;
    }
    protected async void AddReview()
    {
        if(customerReview_Custom.RoomId <= 0)
            customerReview_Custom.RoomId = roomId;
        customerReview_Custom.OrderroomId = orderroomId;
        customerReview_Custom.CrStar = StarTemp;
        customerReview_Custom.CrDate = DateTime.Now;
        var res = await customerReviewService.AddCustomerreviewOfRoom(customerReview_Custom);
        if(res != null)
        {
            //await CheckStarOfHotel();
            if (IsConnected)
                await SendMessage();
            this.DialogService.Close(0);
        }

    }
    protected async void UpdateReview()
    {
        if(customerReview_Custom.RoomId <= 0)
            customerReview_Custom.RoomId = roomId;
        customerReview_Custom.OrderroomId = orderroomId;
        customerReview_Custom.CrStar = StarTemp;
        customerReview_Custom.CrDate = DateTime.Now;
        var res = await customerReviewService.UpdateCustomerreviewOfRoom(customerReview_Custom);
        if(res != null)
        {
            //await CheckStarOfHotel();
            if (IsConnected)
                await SendMessage();
            this.DialogService.Close(1);
        }

    }
    protected async Task CheckStarOfHotel()
    {
        hotels = await hotelService.GetAllHotel();
        foreach (var item in hotels)
        {
            var resCusHotel = await customerReviewService.GetAllCustomerReviewOfHotel(item.HotelId);
            if(resCusHotel.Where(r=>r.CrStar == 1).Count() == 1)
            {
                UpdateHotel(item);
            }
        }
    }
    protected async void UpdateHotel(Hotel hotelre)
    {
        var hotelTemp = await hotelService.GetHotel(hotelre.HotelId);
        Hotel_Custom hotel = new Hotel_Custom();
        hotel.HotelId = hotelTemp.HotelId;
        hotel.ProvinceId = hotelTemp.ProvinceId;
        hotel.DistrictId = hotelTemp.DistrictId;
        hotel.WardId = hotelTemp.WardId;
        hotel.HotelName = hotelTemp.HotelName;
        hotel.HotelAddress = hotelTemp.HotelAddress;
        hotel.HotelX = hotelTemp.HotelX;
        hotel.HotelY = hotelTemp.HotelY;
        hotel.UserPhone = hotelTemp.UserPhone;
        hotel.HotelStatus = false;
        await hotelService.UpdateHotel(hotel);
    }
}
