@using ShareModel.Custom

@if(customerreviews.Count > 0)
{  
    <section class="section__content section__content--p30">
        <div class="row">
            <RadzenCard>
                <div class="col-lg-5">
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Đánh giá của bạn</RadzenText>
                    <RadzenRating @bind-Value=StarTemp />
                </div>
                <div class="col-lg-7">
                    <RadzenTextArea @bind-Value=customerReview_Custom.CrComment Class="w-100" Placeholder="Bình luận tại đây"></RadzenTextArea>
                </div>
                <RadzenButton Text="Cập nhật" ButtonStyle="ButtonStyle.Success" Click="UpdateReview"></RadzenButton>
            </RadzenCard>
            </div>
            <br />
            <div class="row">
                <div class="col review-detail-cn">
                <!-- Review All -->
                    <div class="review-all">
                        <h4 class="review-h">
                            Phòng này có tất cả (@customerreviews.Count) bình luận 
                        </h4>
                        <!-- Review Item -->
                        @foreach (var item in customerreviews)
                        {
                            <div class="row review-item">
                                <div class="col-xs-4 review-number" style="border-right: inset;">
                                    <ins>@item.CrStar/5</ins>
                                    <span>@item.UserPhoneNavigation.UserName</span>
                                    <small>@DateTime.Parse(item.CrDate.ToString()).ToString("dddd, dd, MMMM, yyyy", new System.Globalization.CultureInfo("vi-VN"))</small>
                                </div>
                                <div class="col-xs-8 review-text">
                                     <p>
                                        @{
                                            var CrComment = "";
                                            if(item.CrComment != null)
                                                CrComment = item.CrComment;
                                            else
                                                CrComment = "Người dùng không bình luận gì";
                                        }    
                                        @CrComment
                                     </p>
                                </div>
                            </div>
                        }
                        <!-- End Review Item -->
                    </div>
                 </div>
            </div>
    </section>
}
else
{  
    <section class="section__content section__content--p30">
        <div class="row">
            <RadzenCard>
                <div class="col-lg-5">
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Đánh giá của bạn</RadzenText>
                    <RadzenRating @bind-Value=StarTemp />
                </div>
                <div class="col-lg-7">
                    <RadzenTextArea @bind-Value=customerReview_Custom.CrComment Class="w-100" Placeholder="Bình luận tại đây"></RadzenTextArea>
                </div>
                <RadzenButton Text="Thêm đánh giá" ButtonStyle="ButtonStyle.Success" Click="AddReview"></RadzenButton>
            </RadzenCard>
            </div>
            <br />
            <div class="row">
                <div class="col review-detail-cn">
                <!-- Review All -->
                    <div class="review-all">
                        <h4 class="review-h">
                            Phòng này có tất cả (@customerreviews.Count) bình luận 
                        </h4>
                        <!-- Review Item -->
                        @foreach (var item in customerreviews)
                        {
                            <div class="row review-item">
                                <div class="col-xs-4 review-number">
                                    <ins>@item.CrStar/5</ins>
                                    <span>@item.UserPhoneNavigation.UserName</span>
                                    <small>@DateTime.Parse(item.CrDate.ToString()).ToString("dddd, dd, MMMM, yyyy", new System.Globalization.CultureInfo("vi-VN"))</small>
                                </div>
                                <div class="col-xs-8 review-text">
                                     <p>
                                        @{
                                            var CrComment = "";
                                            if(item.CrComment != null)
                                                CrComment = item.CrComment;
                                            else
                                                CrComment = "Người dùng không bình luận gì";
                                        }    
                                        @CrComment
                                     </p>
                                </div>
                            </div>
                        }
                        <!-- End Review Item -->
                    </div>
                 </div>
            </div>
    </section>
}

    <link href='https://fonts.googleapis.com/css?family=Lato:300,400%7COpen+Sans:300,400,600' rel='stylesheet' type='text/css'>
    <!-- End Font Google -->
    <!-- Library CSS -->
    <link rel="stylesheet" href="/home/css/library/font-awesome.min.css">
    <link rel="stylesheet" href="/home/css/library/bootstrap.min.css">
    <link rel="stylesheet" href="/home/css/library/jquery-ui.min.css">
    
    <!-- End Library CSS -->
    <link rel="stylesheet" href="/home/css/style.css">

@code {
    [Parameter]
    public int id{ get; set; }
    protected int StarTemp = 0;
    List<Customerreview> customerreviews = new List<Customerreview>();
    CustomerReview_Custom customerReview_Custom = new CustomerReview_Custom();

    CustomerReviewService customerReviewService = new CustomerReviewService();
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeAsync<IJSObjectReference>("import", "./Shared/Layout_Hotel.razor.js");
            var phone = await sessionStorage.GetItemAsync<string>("customer_phone");
            if (phone != null)
                customerReview_Custom.UserPhone = phone;
            if(id > 0)
            {
                customerreviews = await customerReviewService.GetAllCustomerreviewOfRoom(id);
                if(customerreviews.Count > 0)
                {
                    foreach (var item in customerreviews)
                    {
                        if(item.RoomId == id && item.UserPhone == phone)
                        {
                            customerReview_Custom.Id = item.Id;
                            customerReview_Custom.RoomId = item.RoomId;
                            customerReview_Custom.UserPhone = item.UserPhone;
                            customerReview_Custom.CrStar = item.CrStar;
                            customerReview_Custom.CrComment = item.CrComment;
                            StarTemp = (int)item.CrStar;
                            break;
                        }
                    }
                }
            }
            StateHasChanged();
        }

    }
    protected void OnChange(int value)
    {
        customerReview_Custom.CrStar = (double)value;
    }
    protected async void AddReview()
    {
        if(customerReview_Custom.RoomId <= 0)
            customerReview_Custom.RoomId = id;
        customerReview_Custom.CrStar = StarTemp;
        customerReview_Custom.CrDate = DateTime.Now;
        var res = await customerReviewService.AddCustomerreviewOfRoom(customerReview_Custom);
        if(res != null)
            this.DialogService.Close(0);
    }
    protected async void UpdateReview()
    {
        if(customerReview_Custom.RoomId <= 0)
            customerReview_Custom.RoomId = id;
        customerReview_Custom.CrStar = StarTemp;
        customerReview_Custom.CrDate = DateTime.Now;
        var res = await customerReviewService.UpdateCustomerreviewOfRoom(customerReview_Custom);
        if(res != null)
            this.DialogService.Close(1);
    }
}
